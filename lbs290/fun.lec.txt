

/* FUNCTION FLOW AND FUNCTION CALL SYNTAX */


main()

{

  printf("main-1\n");
  func_a();
  printf("main-2\n");
  func_b();
  printf("main-3\n");
  func_a();
  printf("main-4\n");
  func_c();
  printf("main-5\n");
}

func_a()
{
  printf("In func_a\n");
}

func_b()
{
  printf("In func_b-1\n");
  func_c();
  printf("In func_b-2\n");
}

func_c()
{
  printf("In func_c\n");
}


Output:

main-1
In func_a
main-2
In func_b-1
In func_c
In func_b-2
main-3
In func_a
main-4
In func_c
main-5


/* ACTUAL AND FORMAL PARAMETERS */

main()

{
  int a,b,c,d;

  a = 1; 
  b = 2;
  c = 3;
  d = 0;

  printf("main-1 a=%d b=%d c=%d d=%d\n",a,b,c,d);

  d = func(a,b,c);

  printf("main-3 a=%d b=%d c=%d d=%d\n",a,b,c,d);
}

/* Type and number of parameters in the function declaration must match
   type and number of parameters in the function call */

int func(x,y,z)

  int x;
  int y;
  int z;
{

  printf("func-1 x=%d y=%d z=%d\n",z,y,z);

  z = x + y;
  x = 4;

  printf("func-2 x=%d y=%d z=%d\n",z,y,z);

  return 27;
}

Output:

main-1 a=1 b=2 c=3 d=0
func-1 x=3 y=2 z=3
func-2 x=3 y=2 z=3
main-3 a=1 b=2 c=3 d=27
